# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

---
# Conditionally disable springdoc on missing api-docs profile
spring:
  config:
    activate:
      on-profile: '!api-docs'
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 10MB
      max-request-size: 30MB

springdoc:
  api-docs:
    enabled: false
---
eureka:
  client:
    enabled: true
    healthcheck:
      enabled: true
    fetch-registry: true
    register-with-eureka: true
    instance-info-replication-interval-seconds: 10
    registry-fetch-interval-seconds: 10
  instance:
    appname: xteged
    instanceId: xteged:${spring.application.instance-id:${random.value}}
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
    status-page-url-path: ${management.endpoints.web.base-path}/info
    health-check-url-path: ${management.endpoints.web.base-path}/health
    metadata-map:
      zone: primary # This is needed for the load balancer
      profile: ${spring.profiles.active}
      version: #project.version#
      git-version: ${git.commit.id.describe:}
      git-commit: ${git.commit.id.abbrev:}
      git-branch: ${git.branch:}
      context-path: ${server.servlet.context-path:}
feign:
  circuitbreaker:
    enabled: true
  # client:
  #   config:
  #     default:
  #       connectTimeout: 5000
  #       readTimeout: 5000
management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          [
            'configprops',
            'env',
            'health',
            'info',
            'jhimetrics',
            'jhiopenapigroups',
            'logfile',
            'loggers',
            'prometheus',
            'threaddump',
            'caches',
          ]
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
    env:
      enabled: true
  health:
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true
  metrics:
    export:
      # Prometheus is the default metrics backend
      prometheus:
        enabled: true
        step: 60
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    tags:
      application: ${spring.application.name}
    web:
      server:
        request:
          autotime:
            enabled: true

spring:
  application:
    name: xteGED
  profiles:
    # The commented value for `active` can be replaced with valid Spring profiles to load.
    # Otherwise, it will be filled in by maven when building the JAR file
    # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
    active: #spring.profiles.active#
    group:
      dev:
        - dev
        - api-docs
        # Uncomment to activate TLS for the dev profile
        #- tls
  jmx:
    enabled: false
  messages:
    basename: i18n/messages
  main:
    allow-bean-definition-overriding: true
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  task:
    execution:
      thread-name-prefix: xte-ged-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: xte-ged-scheduling-
      pool:
        size: 2
  thymeleaf:
    mode: HTML
  output:
    ansi:
      console-available: true
  security:
    oauth2:
      client:
        authority-mapping:
          ROLE_USER: ROLE_USER
          ROLE_ADMIN: ROLE_ADMIN
        provider:
          oidc:
            issuer-uri: http://localhost:9080/auth/realms/Postarion
            authorization-uri: http://localhost:9080/auth/realms/Postarion/protocol/openid-connect/auth
            token-uri: http://localhost:9080/auth/realms/Postarion/protocol/openid-connect/token
            user-info-uri: http://localhost:9080/auth/realms/Postarion/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:9080/auth/realms/Postarion/protocol/openid-connect/certs
        registration:
          oidc:
            client-id: postarion
            client-secret:
            scope: openid, profile, email, offline_access # last one for refresh tokens
keycloak:
  realm: Postarion
  resource: postarion
  auth-server-url: http://localhost:9080/auth
  credentials:
    secret:
  ssl-required: external
  use-resource-role-mappings: true
  bearer-only: true
  public-client: true
  cors: true
  principal-attribute: admin

server:
  servlet:
    session:
      cookie:
        http-only: true



springdoc:
  show-actuator: true

# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  clientApp:
    name: 'xteGedApp'
  # By default CORS is disabled. Uncomment to enable.
  # cors:
  #   allowed-origins: "http://localhost:8100,http://localhost:9000"
  #   allowed-methods: "*"
  #   allowed-headers: "*"
  #   exposed-headers: "Authorization,Link,X-Total-Count,X-${jhipster.clientApp.name}-alert,X-${jhipster.clientApp.name}-error,X-${jhipster.clientApp.name}-params"
  #   allow-credentials: true
  #   max-age: 1800
  mail:
    from: xteGED@localhost
  api-docs:
    default-include-pattern: ${server.servlet.context-path:}/api/**
    management-include-pattern: ${server.servlet.context-path:}/management/**
    title: Xte GED API
    description: Xte GED API documentation
    version: 0.0.1
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license: unlicensed
    license-url:
  security:
    oauth2:
      audience:
        - account
        - api://default


web:
  cors:
    allowed-origins:
      - "http://localhost:4200" # Your Angular app
    allowed-methods:
      - "GET"
      - "POST"
      - "PUT"
      - "DELETE"
      - "OPTIONS"
    allowed-headers:
      - "*"
    allow-credentials: true






# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:

alfresco:
  url :  http://localhost:8081/alfresco/api/-default-/public/alfresco/versions/1
  repository:
    url: http://localhost:8081/alfresco/api/-default-/public/cmis/versions/1.1/atom
    user: admin
    pass: alfresco

  ldap:
    synchronization:
      active: true
      java.naming:
        security:
          authentication: simple
          provider:
            url: ldap://localhost:389
          principal: cn=admin,dc=xtensus,dc=com
          credentials: ikhlass
      queryBatchSize: 1000
      groupQuery: (objectclass=groupOfNames)
      userQuery: (objectclass=inetOrgPerson)
      groupDifferentialQuery: (&(objectclass=groupOfNames)(!(modifyTimestamp<={0}))))
      userDifferentialQuery: (&(objectclass=inetOrgPerson)(!(modifyTimestamp<={0}))))
      groupSearchBase: ou=groups,dc=xtensus,dc=com
      userSearchBase: ou=users,dc=xtensus,dc=com
      modifyTimestampAttributeName: modifyTimestamp
      userIdAttributeName: uid
      groupIdAttributeName: cn
      userFirstNameAttributeName: givenName
      userLastNameAttributeName: sn
      userEmailAttributeName: mail
      defaultHomeFolderProvider: ldapHomeFolderProvider
      groupMemberAttributeName: member
      groupType: groupOfNames
      personType: inetOrgPerson

  authentication:
    active: true
    allowGuestLogin: false
    userNameFormat: uid=%s,dc=xtensus,dc=com


